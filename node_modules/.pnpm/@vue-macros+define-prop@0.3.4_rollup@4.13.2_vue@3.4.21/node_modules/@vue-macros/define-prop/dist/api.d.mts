export { E as Edition, P as PROPS_VARIABLE_NAME, t as transformDefineProp } from './index-E12cCn9l.mjs';
import { MagicString } from '@vue-macros/common';
import * as t from '@babel/types';

type Impl = (ctx: {
    s: MagicString;
    offset: number;
    resolveTSType: (type: t.TSType) => Promise<string[] | undefined>;
}) => {
    walkCall: (node: t.CallExpression, parent: t.ParentMaps['CallExpression']) => string;
    genRuntimeProps: (isProduction: boolean) => Promise<string | undefined>;
};
declare function stringifyArray(strs: string[]): string;

declare const kevinEdition: Impl;

declare const johnsonEdition: Impl;

export { type Impl, johnsonEdition, kevinEdition, stringifyArray };

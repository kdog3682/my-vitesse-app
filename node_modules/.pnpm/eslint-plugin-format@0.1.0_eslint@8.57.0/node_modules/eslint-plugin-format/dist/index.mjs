import * as _parserPlain from 'eslint-parser-plain';
import { join } from 'node:path';
import { createSyncFn } from 'synckit';
import { messages, reportDifferences } from 'eslint-formatting-reporter';
import { fileURLToPath } from 'node:url';

const dirWorkers = fileURLToPath(new URL("../workers", import.meta.url));

let format$1;
const prettier = {
  meta: {
    type: "layout",
    docs: {
      description: "Use Prettier to format code",
      category: "Stylistic"
    },
    fixable: "whitespace",
    schema: [
      {
        type: "object",
        properties: {
          parser: {
            type: "string",
            required: true
          }
        },
        additionalProperties: true
      }
    ],
    messages
  },
  create(context) {
    if (!format$1)
      format$1 = createSyncFn(join(dirWorkers, "prettier.cjs"));
    return {
      Program() {
        const sourceCode = context.sourceCode.text;
        const formatted = format$1(sourceCode, context.options[0] || {});
        reportDifferences(context, sourceCode, formatted);
      }
    };
  }
};

let format;
const dprint = {
  meta: {
    type: "layout",
    docs: {
      description: "Use dprint to format code",
      category: "Stylistic"
    },
    fixable: "whitespace",
    schema: [
      {
        type: "object",
        properties: {
          language: {
            type: "string",
            required: true
          },
          languageOptions: {
            type: "object"
          }
        },
        additionalProperties: true
      }
    ],
    messages
  },
  create(context) {
    if (!format)
      format = createSyncFn(join(dirWorkers, "dprint.cjs"));
    return {
      Program() {
        const sourceCode = context.sourceCode.text;
        const formatted = format(sourceCode, context.filename, context.options[0] || {});
        reportDifferences(context, sourceCode, formatted);
      }
    };
  }
};

const parserPlain = {
  meta: {
    name: "eslint-parser-plain"
  },
  ..._parserPlain
};
const index = {
  parserPlain,
  rules: {
    prettier,
    dprint
  }
};

export { index as default };
